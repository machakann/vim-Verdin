*Verdin.txt*	An omni completion function for Vim script.
						Last change:04-Sep-2017.

Author  : machakann <https://github.com/machakann>
License : NYSL license
          Japanese <http://www.kmonos.net/nysl/>
          English (Unofficial) <http://www.kmonos.net/nysl/index.en.html>

Requirement:	Vim 8.0 or higher

==============================================================================
USAGE					*Verdin-usage*

*Verdin* is an implementation of omni completion |compl-omni| function for Vim
script. If this plugin is appropriately installed, it automatically sets
|'omnifunc'|. User can call the functionality by the key sequence <C-x><C-o>
in insert mode. |i_CTRL-X_CTRL-O| If you don't want to set |'omnifunc'|
option, add the line into your vimrc.
					*g:Verdin#donotsetomnifunc*
>
	let g:Verdin#donotsetomnifunc = 1
<
`b:Verdin_donotsetomnifunc` works buffer-locally prior to
|g:Verdin#donotsetomnifunc|.

------------------------------------------------------------------------------

This plugin has a simple fuzzy matching engine. If a non-zero value is
assigned to |g:Verdin#fuzzymatch|, not exactly but similarly matched items may
also be listed to popup window. This option is ON in default, user can disable
by assigning zero to |g:Verdin#fuzzymatch|.
					*g:Verdin#fuzzymatch*
>
	let g:Verdin#fuzzymatch = 0
<
`b:Verdin_fuzzymatch` works buffer-locally prior to |g:Verdin#fuzzymatch|.

------------------------------------------------------------------------------

This plugin also provides an additional feature, autocompletion. It
automatically calls the completion function when the it can suggest items. If
you want to try this, add the line into your vimrc.
					*g:Verdin#autocomplete*
>
	let g:Verdin#autocomplete = 1
<
It may conflict with other autocompletion plugin, thus do not turn on if you
are using them. The autocompletion feature does not depends on |'omnifunc'|.
So not necessarily to set it.

`b:Verdin_autocomplete` works buffer-locally prior to |g:Verdin#autocomplete|.

------------------------------------------------------------------------------

The autocompletion could update your display too frequent, and it may cause
annoying flickers. In that case, optimize the delay to refresh display in
millisecond.
					*g:Verdin#autocompletedelay*
>
	let g:Verdin#autocompletedelay = 200
<
This plugin waits a next user input for the period, and if not then update
the popup window. For me 200 ~ 300 works comfortably, but it would depend on
environments and, of course, personal preference. The default value is 200.

`b:Verdin_autocompletedelay` works buffer-locally prior to
|g:Verdin#autocompletedelay|.

------------------------------------------------------------------------------

This plugin searches and scans the project files in the following directory.
  `*.vim`
  `autoload/*.vim`
  `autoload/**/*.vim`
  `plugin/*.vim`
  `plugin/**/*.vim`
  `ftplugin/*.vim`
  `ftplugin/**/*.vim`

					*g:Verdin#loadpath*
If user wants to add extra project files, use |g:Verdin#loadpath| to point the
location of the files. It is a list of strings. Each string would be passed to
|glob()| function. See |wildcard| also.
>
	let g:Verdin#loadpath += ['test/.testrc', 'test/*.vim']
<
`b:Verdin_loadpath` works buffer-locally prior to |g:Verdin#loadpath|.

------------------------------------------------------------------------------

If |g:Verdin#autobraketinsert| is 1 or 2, braket may be added after a
completed function name.

  * If |g:Verdin#autobraketinsert| is 1, both bra and ket are added for
    functions without argments and only bra is added for functions with
    1 or more arguments.

  * If |g:Verdin#autocompletedelay| is 2, both bra and ket are added.

					*g:Verdin#autobraketinsert*
>
	let g:Verdin#autobraketinsert = 2
<
`b:Verdin_autobraketinsert` works buffer-locally prior to
|g:Verdin#autobraketinsert|.

==============================================================================
COMMANDS				*Verdin-commands*

:VerdinStartAutocompletion[!]		*:VerdinStartAutocompletion*
	The command starts auto-completion in the current buffer. If ! is
	specified, it launchs auto-completion all over the listed buffers.

:VerdinStopAutocompletion[!]		*:VerdinStopAutocompletion*
	The command stops auto-completion in the current buffer. If ! is
	specified, it stops auto-completion all over the listed buffers.

==============================================================================
FUNCTIONS				*Verdin-functions*

Verdin#omnifunc(findstart, base)	*Verdin#omnifunc()*
	This is a omni completion function for Vim script. See |'omnifunc'|,
	|complete-functions| and |i_CTRL-X_CTRL-O|.

==============================================================================
COOPERATION				*Verdin-cooperation*

neocomplete~
vim-Verdin has its neocomplete source. Using Verdin through neocomplete
plugin, for example, add the lines into vimrc.
>
  let g:neocomplete#sources = get(g:, 'neocomplete#sources', {})
  let g:neocomplete#sources.vim = get(g:neocomplete#sources, 'vim', [])
  call add(g:neocomplete#sources.vim, 'Verdin')
<
==============================================================================
vim:tw=78:ts=8:ft=help:norl:noet:
